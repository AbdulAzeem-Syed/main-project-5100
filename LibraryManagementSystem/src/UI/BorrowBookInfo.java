/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Book;
import Model.BookBorrowed;
import static java.awt.image.ImageObserver.HEIGHT;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Abdul
 */
public class BorrowBookInfo extends javax.swing.JPanel {

    /**
     * Creates new form BorrowBookInfo
     */
    private ArrayList<BookBorrowed> booksBorrowed = new ArrayList();
    private BookBorrowed selectedBook;
    public BorrowBookInfo() {
        initComponents();
        updateTable();
        cleanup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        borrowerInfoTable = new javax.swing.JTable();
        searchBorowerInfo = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        statusType = new javax.swing.JComboBox<>();
        updateBookStatus = new javax.swing.JButton();
        Submit = new javax.swing.JButton();
        bookNameLabel = new javax.swing.JLabel();

        borrowerInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Book", "Borrower", "Status", "Due Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        borrowerInfoTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(borrowerInfoTable);

        searchBorowerInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBorowerInfoActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        statusType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Requested", "Borrowed" }));

        updateBookStatus.setText("Edit Status");
        updateBookStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBookStatusActionPerformed(evt);
            }
        });

        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        bookNameLabel.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(searchBorowerInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateBookStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(statusType, 0, 100, Short.MAX_VALUE)
                        .addComponent(Submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(bookNameLabel))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(101, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchBorowerInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(updateBookStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(bookNameLabel)
                        .addGap(30, 30, 30)
                        .addComponent(statusType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchBorowerInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBorowerInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBorowerInfoActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        var sorter = new TableRowSorter(borrowerInfoTable.getModel());
        borrowerInfoTable.setRowSorter(sorter);
        var searchString = searchBorowerInfo.getText();
        if (searchString.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter(searchString));
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // TODO add your handling code here:
        cleanup();
    }//GEN-LAST:event_SubmitActionPerformed

    private void updateBookStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBookStatusActionPerformed
        // TODO add your handling code here:
        int selectedIndex = borrowerInfoTable.getSelectedRow();
        if(selectedIndex == -1)
        {
            JOptionPane.showMessageDialog(this, "No book selected", "Error", HEIGHT);
            return;
        }
        try
        {
            selectedBook = booksBorrowed.get(selectedIndex);
            bookNameLabel.setText(selectedBook.getBookName());
            statusType.setSelectedItem(selectedBook.getStatus());
            statusType.setEnabled(true);
        }
        catch(Exception e)
        {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error", HEIGHT);
        }
    }//GEN-LAST:event_updateBookStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Submit;
    private javax.swing.JLabel bookNameLabel;
    private javax.swing.JTable borrowerInfoTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchBorowerInfo;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> statusType;
    private javax.swing.JButton updateBookStatus;
    // End of variables declaration//GEN-END:variables
    public void updateTable()
    {
        BookBorrowed book1 = new BookBorrowed();
        book1.setUserName("TestUser1");
        book1.setBookName("Test book1");
        book1.setStatus("Requested");
        //book1.setDueDate(Date);
        BookBorrowed book2 = new BookBorrowed();
        book2.setUserName("TestUser2");
        book2.setBookName("Test book2");
        book2.setStatus("Borrowed");
        //book2.setDueDate(LocalDate.now());
        this.booksBorrowed.add(book1);
        this.booksBorrowed.add(book2);//DatabaseConnector.getAllCustomers();
        DefaultTableModel model = (DefaultTableModel) borrowerInfoTable.getModel();
        model.setRowCount(0);
        for(BookBorrowed b : booksBorrowed)
        {
            Object [] row = new Object[4];
            row[0] = b.getBookName();
            row[1] = b.getUserName();
            row[2] = b.getStatus();
            row[3] = b.getStatus();
            model.addRow(row);
        }
    }
    
    public void cleanup()
    {
        statusType.setEnabled(false);
        bookNameLabel.setText("");
        selectedBook = null;
    }
}
